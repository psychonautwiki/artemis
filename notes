if let UpdateKind::InlineQuery(query) = &update.kind {
            self.api.spawn(
                query.clone().answer(
                    vec!(
                        InlineQueryResult::InlineQueryResultArticle(
                            InlineQueryResultArticle::new(
                                "123",
                                "test",
                                inline_query_result
                                ::InputMessageContent
                                ::InputTextMessageContent(
                                    inline_query_result::InputTextMessageContent {
                                        message_text: "test".into(),
                                        parse_mode: None,
                                        disable_web_page_preview: true,
                                    }
                                )
                            )
                        )
                    )
                )
            )
        }


